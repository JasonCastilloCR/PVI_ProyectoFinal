//---------------------------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated by T4Model template for T4 (https://github.com/linq2db/linq2db).
//    Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------------------------------

#pragma warning disable 1573, 1591

using System;
using System.Collections.Generic;
using System.Data;
using System.Linq;

using LinqToDB;
using LinqToDB.Common;
using LinqToDB.Configuration;
using LinqToDB.Data;
using LinqToDB.Mapping;

namespace DataModels
{
	/// <summary>
	/// Database       : PVI_ProyectoFinal
	/// Data Source    : DESKTOP-TG14CHI
	/// Server Version : 14.00.1000
	/// </summary>
	public partial class PviProyectoFinalDB : LinqToDB.Data.DataConnection
	{
		public ITable<Bitacora>     Bitacoras      { get { return this.GetTable<Bitacora>(); } }
		public ITable<Casa>         Casas          { get { return this.GetTable<Casa>(); } }
		public ITable<Categoria>    Categorias     { get { return this.GetTable<Categoria>(); } }
		public ITable<Cobro>        Cobros         { get { return this.GetTable<Cobro>(); } }
		public ITable<DetalleCobro> DetalleCobroes { get { return this.GetTable<DetalleCobro>(); } }
		public ITable<Persona>      Personas       { get { return this.GetTable<Persona>(); } }
		public ITable<Servicio>     Servicios      { get { return this.GetTable<Servicio>(); } }

		public PviProyectoFinalDB()
		{
			InitDataContext();
			InitMappingSchema();
		}

		public PviProyectoFinalDB(string configuration)
			: base(configuration)
		{
			InitDataContext();
			InitMappingSchema();
		}

		public PviProyectoFinalDB(DataOptions options)
			: base(options)
		{
			InitDataContext();
			InitMappingSchema();
		}

		public PviProyectoFinalDB(DataOptions<PviProyectoFinalDB> options)
			: base(options.Options)
		{
			InitDataContext();
			InitMappingSchema();
		}

		partial void InitDataContext  ();
		partial void InitMappingSchema();
	}

	[Table(Schema="dbo", Name="Bitacora")]
	public partial class Bitacora
	{
		[Column("id_bitacora"), PrimaryKey, Identity] public int      IdBitacora { get; set; } // int
		[Column("detalle"),     NotNull             ] public string   Detalle    { get; set; } // varchar(255)
		[Column("id_cobro"),    NotNull             ] public int      IdCobro    { get; set; } // int
		[Column("id_user"),     NotNull             ] public int      IdUser     { get; set; } // int
		[Column("fecha"),       NotNull             ] public DateTime Fecha      { get; set; } // datetime
	}

	[Table(Schema="dbo", Name="Casas")]
	public partial class Casa
	{
		[Column("id_casa"),                                                   PrimaryKey,  Identity] public int      IdCasa             { get; set; } // int
		[Column("nombre_casa"),                                               NotNull              ] public string   NombreCasa         { get; set; } // nvarchar(255)
		[Column("metros_cuadrados"),                                          NotNull              ] public int      MetrosCuadrados    { get; set; } // int
		[Column("numero_habitaciones"),                                       NotNull              ] public int      NumeroHabitaciones { get; set; } // int
		[Column("numero_banos"),                                              NotNull              ] public int      NumeroBanos        { get; set; } // int
		[Column("precio",              SkipOnInsert=true, SkipOnUpdate=true),    Nullable          ] public int?     Precio             { get; set; } // int
		[Column("id_persona"),                                                NotNull              ] public int      IdPersona          { get; set; } // int
		[Column("fecha_construccion"),                                        NotNull              ] public DateTime FechaConstruccion  { get; set; } // date
		[Column("estado"),                                                    NotNull              ] public bool     Estado             { get; set; } // bit
	}

	[Table(Schema="dbo", Name="Categorias")]
	public partial class Categoria
	{
		[Column("id_categoria"), PrimaryKey,  Identity] public int    IdCategoria { get; set; } // int
		[Column("nombre"),       NotNull              ] public string Nombre      { get; set; } // varchar(100)
		[Column("descripcion"),     Nullable          ] public string Descripcion { get; set; } // text
		[Column("estado"),       NotNull              ] public bool   Estado      { get; set; } // bit

		#region Associations

		/// <summary>
		/// FK__Servicios__id_ca__3F466844_BackReference (dbo.Servicios)
		/// </summary>
		[Association(ThisKey="IdCategoria", OtherKey="IdCategoria", CanBeNull=true)]
		public IEnumerable<Servicio> Serviciosidca3F { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="Cobros")]
	public partial class Cobro
	{
		[Column("id_cobro"),     PrimaryKey,  Identity] public int       IdCobro     { get; set; } // int
		[Column("id_casa"),      NotNull              ] public int       IdCasa      { get; set; } // int
		[Column("mes"),          NotNull              ] public int       Mes         { get; set; } // int
		[Column("anno"),         NotNull              ] public int       Anno        { get; set; } // int
		[Column("id_bitacora"),     Nullable          ] public int?      IdBitacora  { get; set; } // int
		[Column("estado"),       NotNull              ] public string    Estado      { get; set; } // varchar(50)
		[Column("monto"),        NotNull              ] public decimal   Monto       { get; set; } // decimal(15, 2)
		[Column("fecha_pagada"),    Nullable          ] public DateTime? FechaPagada { get; set; } // date
	}

	[Table(Schema="dbo", Name="DetalleCobro")]
	public partial class DetalleCobro
	{
		[Column("id_servicio"), PrimaryKey(1), NotNull] public int IdServicio { get; set; } // int
		[Column("id_cobro"),    PrimaryKey(2), NotNull] public int IdCobro    { get; set; } // int
	}

	[Table(Schema="dbo", Name="Persona")]
	public partial class Persona
	{
		[Column("id_persona"),       PrimaryKey,  Identity] public int       IdPersona       { get; set; } // int
		[Column("nombre"),           NotNull              ] public string    Nombre          { get; set; } // varchar(100)
		[Column("apellido"),         NotNull              ] public string    Apellido        { get; set; } // varchar(100)
		[Column("email"),            NotNull              ] public string    Email           { get; set; } // varchar(150)
		[Column("telefono"),            Nullable          ] public string    Telefono        { get; set; } // varchar(15)
		[Column("direccion"),           Nullable          ] public string    Direccion       { get; set; } // varchar(255)
		[Column("fecha_nacimiento"),    Nullable          ] public DateTime? FechaNacimiento { get; set; } // date
		[Column("contrasena"),          Nullable          ] public string    Contrasena      { get; set; } // varchar(255)
		[Column("estado"),              Nullable          ] public bool?     Estado          { get; set; } // bit
		[Column("tipo_persona"),        Nullable          ] public string    TipoPersona     { get; set; } // varchar(50)
	}

	[Table(Schema="dbo", Name="Servicios")]
	public partial class Servicio
	{
		[Column("id_servicio"),  PrimaryKey,  Identity] public int     IdServicio  { get; set; } // int
		[Column("nombre"),       NotNull              ] public string  Nombre      { get; set; } // varchar(100)
		[Column("descripcion"),     Nullable          ] public string  Descripcion { get; set; } // text
		[Column("precio"),       NotNull              ] public decimal Precio      { get; set; } // decimal(10, 2)
		[Column("id_categoria"), NotNull              ] public int     IdCategoria { get; set; } // int
		[Column("estado"),       NotNull              ] public bool    Estado      { get; set; } // bit

		#region Associations

		/// <summary>
		/// FK__Servicios__id_ca__3F466844 (dbo.Categorias)
		/// </summary>
		[Association(ThisKey="IdCategoria", OtherKey="IdCategoria", CanBeNull=false)]
		public Categoria Idca3F { get; set; }

		#endregion
	}

	public static partial class PviProyectoFinalDBStoredProcedures
	{
		#region RetornaPersonas

		public static IEnumerable<RetornaPersonasResult> RetornaPersonas(this PviProyectoFinalDB dataConnection)
		{
			return dataConnection.QueryProc<RetornaPersonasResult>("[dbo].[RetornaPersonas]");
		}

		public partial class RetornaPersonasResult
		{
			[Column("id_persona")      ] public int       Id_persona       { get; set; }
			[Column("nombre_completo") ] public string    Nombre_completo  { get; set; }
			[Column("email")           ] public string    Email            { get; set; }
			[Column("telefono")        ] public string    Telefono         { get; set; }
			[Column("direccion")       ] public string    Direccion        { get; set; }
			[Column("fecha_nacimiento")] public DateTime? Fecha_nacimiento { get; set; }
			[Column("estado")          ] public bool?     Estado           { get; set; }
			[Column("tipo_persona")    ] public string    Tipo_persona     { get; set; }
		}

		#endregion

		#region SpBitacora

		public static int SpBitacora(this PviProyectoFinalDB dataConnection, DateTime? @Fecha, string @Detalle, int? @IdCobro, int? @IdUser)
		{
			var parameters = new []
			{
				new DataParameter("@Fecha",   @Fecha,   LinqToDB.DataType.DateTime),
				new DataParameter("@Detalle", @Detalle, LinqToDB.DataType.NVarChar)
				{
					Size = -1
				},
				new DataParameter("@IdCobro", @IdCobro, LinqToDB.DataType.Int32),
				new DataParameter("@IdUser",  @IdUser,  LinqToDB.DataType.Int32)
			};

			return dataConnection.ExecuteProc("[dbo].[spBitacora]", parameters);
		}

		#endregion

		#region SpCalcularCobro

		public static int SpCalcularCobro(this PviProyectoFinalDB dataConnection, int? @IdCobro, int? @IdCasa)
		{
			var parameters = new []
			{
				new DataParameter("@IdCobro", @IdCobro, LinqToDB.DataType.Int32),
				new DataParameter("@IdCasa",  @IdCasa,  LinqToDB.DataType.Int32)
			};

			return dataConnection.ExecuteProc("[dbo].[spCalcularCobro]", parameters);
		}

		#endregion

		#region SpCrearCasas

		public static int SpCrearCasas(this PviProyectoFinalDB dataConnection, string @nombreCasa, int? @metrosCuadrados, int? @numeroHabitaciones, int? @numeroBanos, int? @idPersona, DateTime? @fechaConstruccion, bool? @estado)
		{
			var parameters = new []
			{
				new DataParameter("@nombre_casa",         @nombreCasa,         LinqToDB.DataType.NVarChar)
				{
					Size = 255
				},
				new DataParameter("@metros_cuadrados",    @metrosCuadrados,    LinqToDB.DataType.Int32),
				new DataParameter("@numero_habitaciones", @numeroHabitaciones, LinqToDB.DataType.Int32),
				new DataParameter("@numero_banos",        @numeroBanos,        LinqToDB.DataType.Int32),
				new DataParameter("@id_persona",          @idPersona,          LinqToDB.DataType.Int32),
				new DataParameter("@fecha_construccion",  @fechaConstruccion,  LinqToDB.DataType.Date),
				new DataParameter("@estado",              @estado,             LinqToDB.DataType.Boolean)
			};

			return dataConnection.ExecuteProc("[dbo].[spCrearCasas]", parameters);
		}

		#endregion

		#region SpCrearCobro

		public static IEnumerable<SpCrearCobroResult> SpCrearCobro(this PviProyectoFinalDB dataConnection, int? @IdCasa, int? @Anno, int? @Mes, decimal? @Monto)
		{
			var parameters = new []
			{
				new DataParameter("@IdCasa", @IdCasa, LinqToDB.DataType.Int32),
				new DataParameter("@Anno",   @Anno,   LinqToDB.DataType.Int32),
				new DataParameter("@Mes",    @Mes,    LinqToDB.DataType.Int32),
				new DataParameter("@Monto",  @Monto,  LinqToDB.DataType.Decimal)
			};

			return dataConnection.QueryProc<SpCrearCobroResult>("[dbo].[spCrearCobro]", parameters);
		}

		public partial class SpCrearCobroResult
		{
			[Column("id_cobro")] public decimal? Id_cobro { get; set; }
		}

		#endregion

		#region SpCrearServicio

		public static int SpCrearServicio(this PviProyectoFinalDB dataConnection, string @nombre, string @descripcion, decimal? @precio, int? @idCategoria, bool? @estado)
		{
			var parameters = new []
			{
				new DataParameter("@nombre",       @nombre,      LinqToDB.DataType.NVarChar)
				{
					Size = 255
				},
				new DataParameter("@descripcion",  @descripcion, LinqToDB.DataType.Text)
				{
					Size = 2147483647
				},
				new DataParameter("@precio",       @precio,      LinqToDB.DataType.Decimal),
				new DataParameter("@id_categoria", @idCategoria, LinqToDB.DataType.Int32),
				new DataParameter("@estado",       @estado,      LinqToDB.DataType.Boolean)
			};

			return dataConnection.ExecuteProc("[dbo].[spCrearServicio]", parameters);
		}

		#endregion

		#region SpDetalleCobro

		public static IEnumerable<SpDetalleCobroResult> SpDetalleCobro(this PviProyectoFinalDB dataConnection, int? @idCobro)
		{
			var parameters = new []
			{
				new DataParameter("@id_cobro", @idCobro, LinqToDB.DataType.Int32)
			};

			return dataConnection.QueryProc<SpDetalleCobroResult>("[dbo].[spDetalleCobro]", parameters);
		}

		public partial class SpDetalleCobroResult
		{
			[Column("id_cobro")   ] public int     Id_cobro    { get; set; }
			[Column("id_casa")    ] public int     Id_casa     { get; set; }
			[Column("propietario")] public string  Propietario { get; set; }
			[Column("nombre_casa")] public string  Nombre_casa { get; set; }
			[Column("monto")      ] public decimal Monto       { get; set; }
			[Column("precio_casa")] public int?    Precio_casa { get; set; }
			[Column("periodo")    ] public string  Periodo     { get; set; }
			[Column("estado")     ] public string  Estado      { get; set; }
			[Column("servicios")  ] public string  Servicios   { get; set; }
			[Column("bitacora")   ] public string  Bitacora    { get; set; }
		}

		#endregion

		#region SpDetalleServicios

		public static IEnumerable<SpDetalleServiciosResult> SpDetalleServicios(this PviProyectoFinalDB dataConnection, int? @idCobro)
		{
			var parameters = new []
			{
				new DataParameter("@id_cobro", @idCobro, LinqToDB.DataType.Int32)
			};

			return dataConnection.QueryProc<SpDetalleServiciosResult>("[dbo].[spDetalleServicios]", parameters);
		}

		public partial class SpDetalleServiciosResult
		{
			[Column("id_servicio")    ] public int    Id_servicio     { get; set; }
			[Column("nombre_servicio")] public string Nombre_servicio { get; set; }
			[Column("adquirido")      ] public int    Adquirido       { get; set; }
		}

		#endregion

		#region SpEliminarCobro

		public static int SpEliminarCobro(this PviProyectoFinalDB dataConnection, int? @IdCobro)
		{
			var parameters = new []
			{
				new DataParameter("@IdCobro", @IdCobro, LinqToDB.DataType.Int32)
			};

			return dataConnection.ExecuteProc("[dbo].[SpEliminarCobro]", parameters);
		}

		#endregion

		#region SpEliminarDetalleCobro

		public static int SpEliminarDetalleCobro(this PviProyectoFinalDB dataConnection, int? @IdCobro)
		{
			var parameters = new []
			{
				new DataParameter("@IdCobro", @IdCobro, LinqToDB.DataType.Int32)
			};

			return dataConnection.ExecuteProc("[dbo].[SpEliminarDetalleCobro]", parameters);
		}

		#endregion

		#region SpGestionarCasas

		public static IEnumerable<SpGestionarCasasResult> SpGestionarCasas(this PviProyectoFinalDB dataConnection)
		{
			return dataConnection.QueryProc<SpGestionarCasasResult>("[dbo].[spGestionarCasas]");
		}

		public partial class SpGestionarCasasResult
		{
			[Column("id_casa")            ] public int      Id_casa             { get; set; }
			[Column("nombre_casa")        ] public string   Nombre_casa         { get; set; }
			[Column("metros_cuadrados")   ] public int      Metros_cuadrados    { get; set; }
			[Column("numero_habitaciones")] public int      Numero_habitaciones { get; set; }
			[Column("numero_banos")       ] public int      Numero_banos        { get; set; }
			[Column("precio")             ] public int?     Precio              { get; set; }
			[Column("id_persona")         ] public int      Id_persona          { get; set; }
			[Column("propietario")        ] public string   Propietario         { get; set; }
			[Column("fecha_construccion") ] public DateTime Fecha_construccion  { get; set; }
			[Column("estado")             ] public bool     Estado              { get; set; }
		}

		#endregion

		#region SpGestionarCobros

		public static IEnumerable<SpGestionarCobrosResult> SpGestionarCobros(this PviProyectoFinalDB dataConnection)
		{
			return dataConnection.QueryProc<SpGestionarCobrosResult>("[dbo].[spGestionarCobros]");
		}

		public partial class SpGestionarCobrosResult
		{
			[Column("id_cobro")    ] public int       Id_cobro    { get; set; }
			                         public string    Cliente     { get; set; }
			                         public string    Casa        { get; set; }
			                         public string    Periodo     { get; set; }
			                         public string    Estado      { get; set; }
			                         public decimal   Monto       { get; set; }
			[Column("Fecha Pagada")] public DateTime? FechaPagada { get; set; }
		}

		#endregion

		#region SpGestionarServicios

		public static IEnumerable<SpGestionarServiciosResult> SpGestionarServicios(this PviProyectoFinalDB dataConnection)
		{
			return dataConnection.QueryProc<SpGestionarServiciosResult>("[dbo].[spGestionarServicios]");
		}

		public partial class SpGestionarServiciosResult
		{
			[Column("id_servicio")     ] public int     Id_servicio      { get; set; }
			[Column("nombre_servicio") ] public string  Nombre_servicio  { get; set; }
			[Column("precio")          ] public decimal Precio           { get; set; }
			[Column("descripcion")     ] public string  Descripcion      { get; set; }
			[Column("id_categoria")    ] public int     Id_categoria     { get; set; }
			[Column("nombre_categoria")] public string  Nombre_categoria { get; set; }
			[Column("estado_servicio") ] public string  Estado_servicio  { get; set; }
		}

		#endregion

		#region SpInactivarCasa

		public static int SpInactivarCasa(this PviProyectoFinalDB dataConnection, int? @idCasa)
		{
			var parameters = new []
			{
				new DataParameter("@idCasa", @idCasa, LinqToDB.DataType.Int32)
			};

			return dataConnection.ExecuteProc("[dbo].[spInactivarCasa]", parameters);
		}

		#endregion

		#region SpInactivarServicio

		public static int SpInactivarServicio(this PviProyectoFinalDB dataConnection, int? @idServicio)
		{
			var parameters = new []
			{
				new DataParameter("@idServicio", @idServicio, LinqToDB.DataType.Int32)
			};

			return dataConnection.ExecuteProc("[dbo].[spInactivarServicio]", parameters);
		}

		#endregion

		#region SpInsertarDetalleCobro

		public static int SpInsertarDetalleCobro(this PviProyectoFinalDB dataConnection, int? @IdCobro, int? @IdServicio)
		{
			var parameters = new []
			{
				new DataParameter("@IdCobro",    @IdCobro,    LinqToDB.DataType.Int32),
				new DataParameter("@IdServicio", @IdServicio, LinqToDB.DataType.Int32)
			};

			return dataConnection.ExecuteProc("[dbo].[SpInsertarDetalleCobro]", parameters);
		}

		#endregion

		#region SpMisCobros

		public static IEnumerable<SpMisCobrosResult> SpMisCobros(this PviProyectoFinalDB dataConnection, int? @idPersona)
		{
			var parameters = new []
			{
				new DataParameter("@idPersona", @idPersona, LinqToDB.DataType.Int32)
			};

			return dataConnection.QueryProc<SpMisCobrosResult>("[dbo].[spMisCobros]", parameters);
		}

		public partial class SpMisCobrosResult
		{
			[Column("id_cobro")    ] public int       Id_cobro    { get; set; }
			                         public string    Cliente     { get; set; }
			                         public string    Casa        { get; set; }
			                         public string    Periodo     { get; set; }
			                         public string    Estado      { get; set; }
			                         public decimal   Monto       { get; set; }
			[Column("Fecha Pagada")] public DateTime? FechaPagada { get; set; }
		}

		#endregion

		#region SpModCasas

		public static int SpModCasas(this PviProyectoFinalDB dataConnection, int? @idCasa, int? @numeroHabitaciones, int? @numeroBanos)
		{
			var parameters = new []
			{
				new DataParameter("@id_casa",             @idCasa,             LinqToDB.DataType.Int32),
				new DataParameter("@numero_habitaciones", @numeroHabitaciones, LinqToDB.DataType.Int32),
				new DataParameter("@numero_banos",        @numeroBanos,        LinqToDB.DataType.Int32)
			};

			return dataConnection.ExecuteProc("[dbo].[spModCasas]", parameters);
		}

		#endregion

		#region SpModCobro

		public static int SpModCobro(this PviProyectoFinalDB dataConnection, int? @idCobro, int? @idCasa, int? @mes, int? @anno, int? @idBitacora, string @estado, decimal? @monto, DateTime? @fechaPagada)
		{
			var parameters = new []
			{
				new DataParameter("@id_cobro",     @idCobro,     LinqToDB.DataType.Int32),
				new DataParameter("@id_casa",      @idCasa,      LinqToDB.DataType.Int32),
				new DataParameter("@mes",          @mes,         LinqToDB.DataType.Int32),
				new DataParameter("@anno",         @anno,        LinqToDB.DataType.Int32),
				new DataParameter("@id_bitacora",  @idBitacora,  LinqToDB.DataType.Int32),
				new DataParameter("@estado",       @estado,      LinqToDB.DataType.VarChar)
				{
					Size = 50
				},
				new DataParameter("@monto",        @monto,       LinqToDB.DataType.Decimal),
				new DataParameter("@fecha_pagada", @fechaPagada, LinqToDB.DataType.Date)
			};

			return dataConnection.ExecuteProc("[dbo].[spModCobro]", parameters);
		}

		#endregion

		#region SpModServicio

		public static int SpModServicio(this PviProyectoFinalDB dataConnection, int? @idServicio, string @descripcion, decimal? @precio)
		{
			var parameters = new []
			{
				new DataParameter("@id_servicio", @idServicio,  LinqToDB.DataType.Int32),
				new DataParameter("@descripcion", @descripcion, LinqToDB.DataType.Text)
				{
					Size = 2147483647
				},
				new DataParameter("@precio",      @precio,      LinqToDB.DataType.Decimal)
			};

			return dataConnection.ExecuteProc("[dbo].[spModServicio]", parameters);
		}

		#endregion

		#region SpPagarCobro

		public static int SpPagarCobro(this PviProyectoFinalDB dataConnection, int? @IdCobro)
		{
			var parameters = new []
			{
				new DataParameter("@IdCobro", @IdCobro, LinqToDB.DataType.Int32)
			};

			return dataConnection.ExecuteProc("[dbo].[SpPagarCobro]", parameters);
		}

		#endregion

		#region SpRetornaCasa

		public static IEnumerable<SpRetornaCasaResult> SpRetornaCasa(this PviProyectoFinalDB dataConnection, int? @idPersona)
		{
			var parameters = new []
			{
				new DataParameter("@id_persona", @idPersona, LinqToDB.DataType.Int32)
			};

			return dataConnection.QueryProc<SpRetornaCasaResult>("[dbo].[spRetornaCasa]", parameters);
		}

		public partial class SpRetornaCasaResult
		{
			[Column("id_casa")            ] public int      Id_casa             { get; set; }
			[Column("nombre_casa")        ] public string   Nombre_casa         { get; set; }
			[Column("metros_cuadrados")   ] public int      Metros_cuadrados    { get; set; }
			[Column("numero_habitaciones")] public int      Numero_habitaciones { get; set; }
			[Column("numero_banos")       ] public int      Numero_banos        { get; set; }
			[Column("precio")             ] public int?     Precio              { get; set; }
			[Column("fecha_construccion") ] public DateTime Fecha_construccion  { get; set; }
			[Column("estado_casa")        ] public string   Estado_casa         { get; set; }
		}

		#endregion

		#region SpRetornaCategorias

		public static IEnumerable<SpRetornaCategoriasResult> SpRetornaCategorias(this PviProyectoFinalDB dataConnection)
		{
			return dataConnection.QueryProc<SpRetornaCategoriasResult>("[dbo].[spRetornaCategorias]");
		}

		public partial class SpRetornaCategoriasResult
		{
			[Column("id_categoria")    ] public int    Id_categoria     { get; set; }
			[Column("nombre")          ] public string Nombre           { get; set; }
			[Column("descripcion")     ] public string Descripcion      { get; set; }
			[Column("estado_categoria")] public string Estado_categoria { get; set; }
		}

		#endregion

		#region SpRetornaPersona

		public static IEnumerable<SpRetornaPersonaResult> SpRetornaPersona(this PviProyectoFinalDB dataConnection)
		{
			return dataConnection.QueryProc<SpRetornaPersonaResult>("[dbo].[spRetornaPersona]");
		}

		public partial class SpRetornaPersonaResult
		{
			[Column("id_persona")    ] public int    Id_persona     { get; set; }
			[Column("nombre")        ] public string Nombre         { get; set; }
			[Column("estado_persona")] public string Estado_persona { get; set; }
		}

		#endregion

		#region SpValidarUsuario

		public static IEnumerable<SpValidarUsuarioResult> SpValidarUsuario(this PviProyectoFinalDB dataConnection, string @email, string @contrasena)
		{
			var parameters = new []
			{
				new DataParameter("@email",      @email,      LinqToDB.DataType.VarChar)
				{
					Size = 150
				},
				new DataParameter("@contrasena", @contrasena, LinqToDB.DataType.VarChar)
				{
					Size = 15
				}
			};

			return dataConnection.QueryProc<SpValidarUsuarioResult>("[dbo].[spValidarUsuario]", parameters);
		}

		public partial class SpValidarUsuarioResult
		{
			[Column("id_persona")  ] public int    Id_persona   { get; set; }
			[Column("tipo_persona")] public string Tipo_persona { get; set; }
			[Column("estado")      ] public bool?  Estado       { get; set; }
			[Column("nombre")      ] public string Nombre       { get; set; }
		}

		#endregion
	}

	public static partial class TableExtensions
	{
		public static Bitacora Find(this ITable<Bitacora> table, int IdBitacora)
		{
			return table.FirstOrDefault(t =>
				t.IdBitacora == IdBitacora);
		}

		public static Casa Find(this ITable<Casa> table, int IdCasa)
		{
			return table.FirstOrDefault(t =>
				t.IdCasa == IdCasa);
		}

		public static Categoria Find(this ITable<Categoria> table, int IdCategoria)
		{
			return table.FirstOrDefault(t =>
				t.IdCategoria == IdCategoria);
		}

		public static Cobro Find(this ITable<Cobro> table, int IdCobro)
		{
			return table.FirstOrDefault(t =>
				t.IdCobro == IdCobro);
		}

		public static DetalleCobro Find(this ITable<DetalleCobro> table, int IdServicio, int IdCobro)
		{
			return table.FirstOrDefault(t =>
				t.IdServicio == IdServicio &&
				t.IdCobro    == IdCobro);
		}

		public static Persona Find(this ITable<Persona> table, int IdPersona)
		{
			return table.FirstOrDefault(t =>
				t.IdPersona == IdPersona);
		}

		public static Servicio Find(this ITable<Servicio> table, int IdServicio)
		{
			return table.FirstOrDefault(t =>
				t.IdServicio == IdServicio);
		}
	}
}
